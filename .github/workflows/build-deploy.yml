name: Build and Deploy Code

on: [push, pull_request]
# on:
#   push:
#     branches:
#       - "main"
#       - "anotherbranch"
#   pull_request:
#     branches:
#       - "main"
#       - 

#env

jobs:
  job1:
    runs-on: ubuntu-latest
    environment:
      name: testing
    env:
      DB_HOST: ${{secrets.DB_HOST}}
      #DB_HOST: postgres / localhost
      DB_PORT: ${{secrets.DB_PORT}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_SCHEMA: ${{secrets.DB_SCHEMA}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env: 
          POSTGRES_DB: ${{secrets.DB_NAME}}
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_USER: ${{secrets.DB_USERNAME}}
        ports:
        - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: pulling git repo
        uses: actions/checkout@v5

      - name: Install python version 3.12.3
        uses: actions/setup-python@v2

        with:
          python-version: "3.12.3"

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: install all dependencies
        run: pip install -r requirements.txt

#      - name: Create test database
#        run: |
#          PGPASSWORD=${{secrets.DB_PASSWORD}} psql \
#            -h ${{secrets.DB_HOST}} \
#            -U ${{secrets.DB_USERNAME}} \
#            -p ${{secrets.DB_PORT}} \
#            -c "CREATE DATABASE \"${{secrets.DB_NAME}}\";"

      - name: Alembic Schema and Upgrade
        # Alembic upgrade DB Schema (and create schema)
        run: alembic upgrade head

      - name: test with pytest
        run: |
          pip install pytest
          pytest

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/my-image

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/social-fastapi:latest
          cache-from: type=local, src=/tmp/.buildx-cache
          cache-to: type=local, dest=/tmp/.buildx-cache
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true

      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf tmp/.buildx-cache
          mv tmp/.buildx-cache-new tmp/.buildx-cache